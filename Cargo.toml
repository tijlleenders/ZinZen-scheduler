[package]
name = "zinzen"
version = "0.2.0"
edition = "2021"
license = "AGPL-3.0"
keywords = ["zinzen", "scheduler", "todo"]
description = "Algorithm for auto-scheduling time-constrained tasks on a timeline"
homepage = "https://github.com/tijlleenders/ZinZen-scheduler"
repository = "https://github.com/tijlleenders/ZinZen-scheduler"
readme = "README.md"
categories = ["algorithms", "date-and-time", "wasm"]

[features]
experimental-testset = []
skip-test-generation = []
with-logging = []

new-tests = []

default = ["new-tests", "with-logging"]

[lib]
#see https://github.com/rust-lang/cargo/issues/6659#issuecomment-463335095
crate-type = ['cdylib', 'lib']
name = 'scheduler'
path = "src/lib.rs"


[profile.release]
lto = true
# Tell `rustc` to optimize for small code size.
opt-level = "s"


[dependencies]
serde_json = "1.0.95"
serde = { version = "1.0.159", features = ["derive"] }
chrono = { version = "0.4.31", features = ["wasmbind", "serde"] }
lazy_static = "1.4.0"

# simple WASM codegen
wasm-bindgen = { version = "0.2.84" }
# instead of wasm-bindgen::serde-serialize feature that may lead to a cyclic package dependency 
serde-wasm-bindgen = "0.5.0"

# display Rust panics as console.error()
console_error_panic_hook = "0.1.7"

# display logs
log = "0.4.19"
env_logger = "0.10.0"

# random number generator for tests
rand = "0.8.5"
# getrandom with js features should be included to make sure the wasm-unknown build target can use the crate in js context (even though we only use this crate in test code)
getrandom = { version = "0.2", features = ["js"] }


[dev-dependencies]
pretty_assertions = "1.3.0"
